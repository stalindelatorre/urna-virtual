# =============================================================================
# URNA VIRTUAL - CONFIGURACIÓN DE PRODUCCIÓN
# =============================================================================
# Archivo de configuración para entorno de producción
# ⚠️ IMPORTANTE: Cambiar TODOS los valores por defecto antes de usar

# =============================================================================
# BASE DE DATOS
# =============================================================================

# PostgreSQL para producción (REQUERIDO)
DATABASE_URL=postgresql://urna_user:CAMBIAR_PASSWORD_SEGURO@tu-servidor-db:5432/urna_virtual_prod

# =============================================================================
# SEGURIDAD Y AUTENTICACIÓN
# =============================================================================

# ⚠️ CAMBIAR OBLIGATORIAMENTE - Generar con: openssl rand -hex 32
JWT_SECRET_KEY=CAMBIAR_ESTA_CLAVE_SECRETA_JWT_MUY_LARGA_Y_SEGURA_PARA_PRODUCCION

# Configuración JWT segura
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
JWT_REFRESH_TOKEN_EXPIRE_DAYS=1

# ⚠️ CAMBIAR OBLIGATORIAMENTE - Clave para cifrado de votos
VOTE_ENCRYPTION_KEY=CAMBIAR_ESTA_CLAVE_DE_CIFRADO_DE_VOTOS_MUY_SEGURA_PARA_PRODUCCION

# =============================================================================
# CONFIGURACIÓN DEL SERVIDOR
# =============================================================================

# Entorno de producción
ENVIRONMENT=production

# Configuración del servidor
HOST=0.0.0.0
PORT=5000

# Debug DESHABILITADO
DEBUG=false

# CORS restrictivo (cambiar por tu dominio)
ALLOWED_ORIGINS=https://tu-dominio.com,https://www.tu-dominio.com

# =============================================================================
# CONFIGURACIÓN DE EMAIL
# =============================================================================

# Configuración SMTP real (cambiar por tu proveedor)
SMTP_SERVER=smtp.tu-proveedor.com
SMTP_PORT=587
SMTP_USERNAME=tu_email@tu-dominio.com
SMTP_PASSWORD=TU_PASSWORD_EMAIL_SEGURO

FROM_EMAIL=noreply@tu-dominio.com
FROM_NAME=Urna Virtual

# =============================================================================
# CONFIGURACIÓN DE ARCHIVOS
# =============================================================================

# Directorio seguro para archivos
UPLOAD_DIRECTORY=/var/urna-virtual/uploads

# Límites estrictos
MAX_FILE_SIZE_MB=2
ALLOWED_IMAGE_EXTENSIONS=jpg,jpeg,png,webp

# =============================================================================
# CONFIGURACIÓN DE REDIS
# =============================================================================

# Redis para cache y sesiones (RECOMENDADO)
REDIS_URL=redis://tu-servidor-redis:6379/0
CACHE_TTL=1800

# =============================================================================
# CONFIGURACIÓN DE LOGGING
# =============================================================================

# Logging optimizado para producción
LOG_LEVEL=WARNING
LOG_FILE=/var/log/urna-virtual/urna_virtual.log
LOG_MAX_SIZE_MB=50
LOG_BACKUP_COUNT=10

# =============================================================================
# CONFIGURACIÓN DE SEGURIDAD (Estricta)
# =============================================================================

# Rate limiting estricto
RATE_LIMIT_LOGIN=3
RATE_LIMIT_GENERAL=60

# Seguridad estricta
LOCKOUT_TIME_MINUTES=30
MAX_LOGIN_ATTEMPTS=3
SESSION_TIMEOUT_MINUTES=15

# =============================================================================
# CONFIGURACIÓN DE BACKUP
# =============================================================================

# Backups automáticos
BACKUP_DIRECTORY=/var/urna-virtual/backups
BACKUP_FREQUENCY_HOURS=6
BACKUP_RETENTION_DAYS=90

# =============================================================================
# CONFIGURACIÓN DE MONITOREO
# =============================================================================

# Alertas (configurar con tus servicios)
ALERT_WEBHOOK_URL=https://hooks.slack.com/services/TU/WEBHOOK/URL
ALERT_EMAIL=admin@tu-organizacion.com

# =============================================================================
# CONFIGURACIÓN DE ELECCIONES
# =============================================================================

# Configuración conservadora
DEFAULT_TIMEZONE=America/Mexico_City
MIN_ELECTION_INTERVAL_DAYS=1
MAX_CANDIDATES_PER_ELECTION=20
MAX_VOTING_DURATION_HOURS=72

# =============================================================================
# CONFIGURACIÓN DE PRODUCCIÓN
# =============================================================================

# NO crear datos de prueba
CREATE_TEST_DATA=false

# URL base de producción
BASE_URL=https://tu-dominio.com

# Certificados SSL
SSL_CERT_PATH=/etc/ssl/certs/tu-dominio.crt
SSL_KEY_PATH=/etc/ssl/private/tu-dominio.key

# Configuración de proxy
PROXY_COUNT=1

# =============================================================================
# SERVICIOS EN LA NUBE (Opcional)
# =============================================================================

# AWS S3 para almacenamiento
AWS_ACCESS_KEY_ID=TU_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=TU_SECRET_KEY
AWS_BUCKET_NAME=urna-virtual-prod-files
AWS_REGION=us-east-1

# Google Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX

# =============================================================================
# CHECKLIST DE SEGURIDAD PARA PRODUCCIÓN
# =============================================================================

# ✅ Cambiar JWT_SECRET_KEY
# ✅ Cambiar VOTE_ENCRYPTION_KEY  
# ✅ Configurar base de datos PostgreSQL
# ✅ Configurar SMTP real
# ✅ Configurar dominio en ALLOWED_ORIGINS
# ✅ Configurar certificados SSL
# ✅ Configurar backups automáticos
# ✅ Configurar monitoreo y alertas
# ✅ Revisar permisos de archivos
# ✅ Configurar firewall
# ✅ Actualizar todas las dependencias
# ✅ Realizar pruebas de penetración
# ✅ Configurar logs centralizados

# =============================================================================
# COMANDOS ÚTILES PARA GENERAR CLAVES SEGURAS
# =============================================================================

# Generar clave JWT:
# openssl rand -hex 32

# Generar clave de cifrado:
# python -c "import secrets; print(secrets.token_hex(32))"

# Verificar configuración:
# python -c "import os; print('JWT_SECRET_KEY configurado:', bool(os.getenv('JWT_SECRET_KEY')))"

